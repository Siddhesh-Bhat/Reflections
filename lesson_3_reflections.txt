1. When would you want to use a remote repository rather than keeping all your work local?
-> A remote repository is required when another developer is involved and you have to refer the work that he has done. Also if your local computer is not accessible and you want to make some changes to your project urgently, then at that time using remote repository might be the only feasible solution.


2. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
-> When we pull changes, we alter our local repository which may create an issue if multiple developers are working on the same project. Thus to avoid conflicts and unnecessary confusions, it is better to pull changes manually rather than having git do it automatically for us.


3. Describe the differences between forks, clones, and branches.  When would you use one instead of another?
-> Forks are a copy of existing repositories on github made on github.
Clones are a copy of existing repositories on remote computer or github made on the local machine.
Branches are made to deviate from the flow of the current branch in a repository.
Forks should be used when we would like to make changes to someone else's repository and also like it to be available on our github account.
Clones should be used anytime you want to make a copy of a repository on your local computer.
Branches are used whenever we want to add an experimental feature to our project or when there are more than one developers working on a project.


4. What is the benefit of having a copy of the last known state of the remote stored locally?
-> By having a copy of last known state of the the remote stored locally, it is easier to track how many commits, we are ahead of the remote branch since the last interaction with it offline. It also speeds up the process in determining whether the local and remote branches are in sync or not during a pull or fetch-merge operation and what type of merge should be performed.


5. How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?
-> 


6. When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?
->
